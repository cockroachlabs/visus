# Copyright 2024 The Cockroach Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Binaries
permissions:
  contents: read
  packages: read
on:
  push:
    tags: [ 'v*.*.*' ]
    paths:
      - 'go.mod'
      - 'go.sum'
      - '**/*.go'
  workflow_dispatch:
    inputs:
      build_binaries:
        description: 'Build distributable binaries'
        type: boolean
        required: false

jobs:
  # Binaries will build visus for a variety of common platforms. This
  # job only runs on pushes to a target branch or tag or in response to
  # a manual run that requests binaries.
  binaries:
    name: Binaries
    if: ${{ github.event_name == 'push' || inputs.build_binaries }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: arm64
          - os: darwin
            arch: amd64
          - os: windows
            arch: amd64
            ext: .exe
          - os: windows
            arch: arm64
            ext: .exe
    env:
      BUILDNAME: visus-${{ matrix.os }}-${{ matrix.arch }}.zip
      OUTPUT: visus-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
    steps:
      - uses: actions/checkout@v4

      # Use separate build caches for each target platform.
      - name: Write cache key
        run: echo '${{ github.job }} ${{ toJSON(matrix) }} ${{ hashFiles('go.sum') }}' > CACHE_KEY

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
          cache-dependency-path: CACHE_KEY

      - name: Create version file
        run: git describe --tags --always --dirty > VERSION.txt

      - name: Build
        run: >
          go
          build
          -v
          -ldflags="-s -w"
          -o $OUTPUT
          .
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
      - name: Upload 
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILDNAME }}
          path: |
            ${{ env.OUTPUT }}
            README.md
            VERSION.txt
            LICENSE
            examples/*.txt
          if-no-files-found: error
